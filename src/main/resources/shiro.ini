# Users and their (optional) assigned roles
#用户
# username = password, role1, role2, ..., roleN
[users]
root = 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918, role1, role2
steve = 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92, role1

# Roles with assigned permissions
#角色和权限
# roleName = perm1, perm2, ..., permN
[roles]
role1 = permission1
role2 = permission2, permission3

[main]
# 如果用户没有登录进行访问时，将自动跳转到/login页面
;authc.loginUrl=/login
#告诉shiro我们用哪个加密算法
sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
iniRealm.credentialsMatcher = $sha256Matcher


# anon: 表示匿名访问，即不需要登录就可以访问，
# authe: 表示需要登录才能访问
# roles[admin]: 表示有admin这个角色的用户才能访问
# perms["user:create"]: 表示有这个权限的才能访问
[urls]
# 例如/login这个路径可以匿名访问
/login=anon
/wellLogin=anon
/unauthorized=anon
/static/**=anon
/authenticated=authe
/role=authe,roles[admin]
/permission=authe,perms["user:create"]
